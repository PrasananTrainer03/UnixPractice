

Object Oriented Programming : 
______________________________

It is an approach that provides a way of modularizing programming, that which can be
used to create small partition memory area for both data and objects, which are to be used
as templates for creating copies of such modules on demand. 

Object : An object is a real world entity, that which possess 3 characterstics known as 

	(i) State

	(ii) Behaviour

	(iii) Identity 

OOPS features : 
________________


	(i) Encapsulation : Wrapping up of data and functions into a single unit known as 
				encapsulation.

	(ii) Abstraction : Hiding the irrelevant details of an object, that do not contribute to its essential 				characterstics known as abstraction.

		*** Encapsulation focuses on showing the relevant details, where abstraction focuses on 
			hiding irrelevant details ***

	(iii) Inheritance : Deriving a new entity from already existing entity known as inheritance, through 				inheritance, we can reduce the size of the program.

	(iv) Polymorphism : The ability to take more than one form known as polymorphism. 

class : A class is a template or blueprint, that which contains combination of data members and member functions.  Members of the class can be accessable by using instance of the class. 

class class_name
{
   data members;
   member functions;
}

Why Java : 
__________

	1) Platform Independence : Write Once and run anywhere.

	2) Console, Windows, Web, Service Oriented 

	3) Packages : Contains group of related classes and interfaces, that which belongs to one common group.
	 	If you want to overcome the naming conflicts between classes then we need the help of packages.


Java Features : 
________________


	 (i) Simple : Java uses Simple C/C++ syntaxes, as a programmer no need to take care of internal details 			like memory management etc... As how much memory allocated to run the program, the same 			amount of memory will be reallocated automatically.

	(ii) Object Oriented : Java supports all object oriented programmig features.

	(iii) Compiled and Interpreted : Java programs are compiled first, during compilation java code will be 		converted into bytecode, then .class file will be created. In Interpretation, it reads the 		bytecode line by line and executes.

	 (iv) Portable : Ability to run the program without changing the source code, java programs are programs, that can run on any env, without changing the source code. 

	 (v) Securable : Java implements various levels of security, as 

				(i) Compiler Level

				(ii) Bytecode Level
			
				(iii) Class Loader Level 

	 (vi) Distributed : By using java, we can implement all distributed and robust applications. 


Java Architecture : 
____________________


	(i) Java Program : Java code, that which stored with extension .java

	(ii) Java Class : Java Program after compilation, its converted into bytecode then .class file will 
				be created. 

	(iii) JVM (Java Virtual Machine) 

		It contains various components as

			(a) Class Loader : Used to load all classes, which are required to run the program. There are various types of class loaders known as 

				(i) Primordial Class Loader : Used to load all system classes which are reqd 	
						to run the program. 

				(ii) Class Loader Objects  : Used to load all custom classses which are reqd to 
						run the program. 

			(b) JIT Compiler : Used to convert Bytecode into CPU specific format. 

			(c) Execution Manager : Contains queue of programs, which are ready to run where we can
				execute the program. Before execution needs to undergone security 				authentication.

        (iv) Java API : It provides runtime env, that which allows you to run the java programs.  


Data Types : 
____________

	There are 2 types of data types as 

		(i) Value Types : Value types will be stored in STACK, and reference types will be stored in HEAP
			int, float, double, char, boolean		

		(ii) Reference Types

			String, Object and Custom classes. 

System.out.println() : used to display any value or message. 

	System -> Class
	out -> Console
	println() -> Method. 

System.out.println("Welcome to Java Programming...");

You can define method main() as 

public static void main(String[] args) {
...
...
...
}

Access Modifiers : 
____________________

There are various access modifiers as 

	(i) private : Allows you to access members within current class. 

	(ii) public : Allows you to access members in entire application. 

	(iii) protected : Allows you to access members within current/derived class. 

	(iv) friendly : By default, java possess friendly access modifier allows you to access members 
		within all classes of current pacakge.


You can create an object to the class, as 

class_name obj = new class_name();

Data obj = new Data();

Control Structures : 
_______________________

Used to define the flow of the program. There are 2 types of control structures known as 

	(i) Branching : used to define the flow of the program. 

	if...else : Executes the statements based on the condition. 

		if (condition) {
			statement(s);
		} else {
			statement(s);
		}

	(ii) Looping : 

	while loop : This loop executes all the statements repeatedly until the condition remains true, if the condition remains false, then it comes out of the loop.  For every loop, basically there are 3 phases as 
	
			(i) Initialization

			(ii) Condition

			(iii) Increment/Decrement 

	Initialization performed at the beginning of the loop.

	Condition performed at the conditional part of the loop.

	Increment/Decrement performed before closing the loop. 

while(condition) {
  statement(s);
}

for loop : this loop executes all the statements repeatedly until the condition remains true, if the condition remains false, then it comes out of the loop.

for(initialization;condition;increment/decrement) {
   statement(s);
}




 





